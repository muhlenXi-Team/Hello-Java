<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.muhlenxi.dao.IStudentDao">
    <!--配置 查询结果的列名和实体类的属性名的对应关系-->
    <resultMap id="studentMap" type="com.muhlenxi.domain.Student">
        <!--主键字段对应-->
        <id property="stuId" column="id"></id>
        <!--非主键字段对应-->
        <result property="stuName" column="name"></result>
        <result property="stuAge" column="age"></result>
        <result property="stuGender" column="gender"></result>
        <result property="schoolId" column="school_id"></result>
    </resultMap>


    <!--查询所有-->
    <select id="findAll" resultMap="studentMap">
        SELECT * FROM student;
    </select>

    <!--保存学生-->
    <insert id="saveStudent" parameterType="com.muhlenxi.domain.Student">
        <!--配置插入操作后，获取插入数据的id-->
        <selectKey keyProperty="stuId" keyColumn="id" resultType="int" order="AFTER">
            select last_insert_id();
        </selectKey>
        INSERT INTO student
         (name, gender, age, addTime, math, english, school_id)
         values (#{stuName}, #{stuGender}, #{stuAge}, #{addTime}, #{math}, #{english}, #{schoolId});
    </insert>

    <!--删除学生-->
    <delete id="deleteStudent" parameterType="java.lang.Integer">
        DELETE FROM student where id = #{uid};
    </delete>

    <!--更改信息-->
    <update id="updateStudent" parameterType="com.muhlenxi.domain.Student">
        UPDATE student SET name=#{stuName}, gender=#{stuGender}, age=#{stuAge}, math=#{math}, english=#{english} WHERE id=#{stuId};
    </update>

    <!--根据 id 查询学生-->
    <select id="findStudentById" parameterType="INT" resultMap="studentMap">
        SELECT * FROM student WHERE id=#{uid};
    </select>

    <!--根据名字模糊查询-->
    <select id="findStudentsByName" parameterType="String" resultMap="studentMap">
        SELECT * FROM student WHERE name like #{stuName};
    </select>

    <!--查询总记录条数-->
    <select id="findTotal" resultType="INT">
        SELECT COUNT(id) FROM student;
    </select>

    <!--根据 queryObject 的条件查询学生-->
    <select id="findStudentsByQueryObject" parameterType="com.muhlenxi.domain.QueryObject" resultMap="studentMap">
        SELECT * FROM student WHERE name like #{student.stuName}
    </select>

</mapper>